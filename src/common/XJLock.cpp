/********************************************************************
	created:	2008/09/18
	created:	17:9:2008   14:40
	file base:	XJLock
	file ext:	cpp
	author:		qingch
	
	purpose:	
*********************************************************************/
#pragma warning(disable : 4275)
#include "XJLock.h"


/*************************************************************
 函 数 名:   CLockUp
 功能概要:	 构造函数，锁定传入的可锁定对象
 返 回 值:   
 参    数:   CLockableObject * pLockable
			 可锁定对象指针
**************************************************************/
CLockUp::CLockUp( CLockableObject* pLockable )
:m_pLockable(pLockable)
{
	m_pLockable->Lock();
}

/*************************************************************
 函 数 名:   ~CLockUp
 功能概要:	 析构函数，解除对应的可锁定对象的锁定
 返 回 值:   
**************************************************************/
CLockUp::~CLockUp()	
{
	m_pLockable->Unlock();
}


/*************************************************************
 函 数 名:   CXJLock
 功能概要:	 构造函数，初始化CLock对象
 返 回 值:   
 参    数:   const char * pHost
             标志是那个模块在使用该互斥体
**************************************************************/
CXJLock::CXJLock( const char* pHost)
{
	m_lock.init(const_cast<char*>(pHost));	
}

/*************************************************************
 函 数 名:   ~CXJLock
 功能概要:	 析构函数，删除CLock对象
 返 回 值:   
**************************************************************/
CXJLock::~CXJLock()
{
	m_lock.del();
}

/*************************************************************
 函 数 名:   Lock
 功能概要:   阻塞取得所有权
 返 回 值:   bool True-成功 False-失败
**************************************************************/
bool CXJLock::Lock()
{
	return m_lock.lock()?true:false;	
}

/*************************************************************
 函 数 名:   Unlock
 功能概要:   让出所有权
 返 回 值:   bool True-成功 False-失败
**************************************************************/
bool CXJLock::Unlock()
{
	return m_lock.unlock()?true:false;	
}

/*************************************************************
 函 数 名:   Trylock
 功能概要:   非阻塞取得所有权
 返 回 值:   bool True-成功 False-失败
**************************************************************/
bool CXJLock::Trylock()
{
	return m_lock.trylock()?true:false;	
}